# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI/CD with Maven

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - '.github/workflows/maven.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - '.github/workflows/maven.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file backend/pom.xml

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
  
    - name: Upload Application to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SHYCAT_EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.SHYCAT_EC2_SSH_KEY }}
        source: backend/
        target: /opt/shycat/
        strip_components: 1

    - name: Restart Application on EC2
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SHYCAT_EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.SHYCAT_EC2_SSH_KEY }}
        script: |
          cd /opt/shycat/
          sudo chown -R ec2-user:ec2-user /opt/shycat/
          ./mvnw clean package
          mv -f target/*.jar /opt/shycat/shycat.jar
          sudo chown ec2-user:ec2-user /opt/shycat/shycat.jar
          sudo systemctl restart shycat.service

    - name: Wait for Application to Start and Ping /health
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SHYCAT_EC2_HOST }}
        username: ec2-user
        key: ${{ secrets.SHYCAT_EC2_SSH_KEY }}
        script: |
          # Wait for the application to be up and running
          sleep 15

          # Check the health endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health)
          if [ "$response" -ne 200 ]; then
            echo "Application health check failed with status code $response"
            exit 1
          else
            echo "Application is up and running"
          fi
